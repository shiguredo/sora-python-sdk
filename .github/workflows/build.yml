name: build

on:
  workflow_dispatch:
  push:
    paths-ignore:
      - "doc/**"
      - "**.md"

jobs:
  build_linux:
    strategy:
      fail-fast: false
      matrix:
        name:
          - ubuntu-22.04_x86_64
          - ubuntu-20.04_armv8_jetson
    runs-on: ${{ matrix.name == 'ubuntu-22.04_x86_64' && 'ubuntu-22.04' || 'ubuntu-20.04' }}
    timeout-minutes: 60
    steps:
      - uses: actions/checkout@v3
      - run: sudo apt-get update
      - run: sudo apt-get -y install libva-dev libdrm-dev
      - run: curl -sSf https://rye-up.com/get | RYE_INSTALL_OPTION="--yes" bash
      - run: echo "$HOME/.rye/shims" >> $GITHUB_PATH
      - run: rye sync
      - run: rye run python run.py

      # Jetson 以外
      - run: rye run python -m build
        if: ${{ matrix.name != 'ubuntu-20.04_armv8_jetson' }}

      # Jetson 向け
      - name: Set up QEMU
        if: ${{ matrix.name == 'ubuntu-20.04_armv8_jetson' }}
        uses: docker/setup-qemu-action@v2
      - run: ./package.ubuntu-20.04_armv8_jetson.sh
        if: ${{ matrix.name == 'ubuntu-20.04_armv8_jetson' }}

      - name: Upload Artifact
        uses: actions/upload-artifact@v3
        with:
          name: ${{ matrix.name }}
          path: dist/
      - name: Slack Notification
        if: failure()
        uses: rtCamp/action-slack-notify@v2
        env:
          SLACK_CHANNEL: sora-python-sdk
          SLACK_COLOR: danger
          SLACK_ICON_EMOJI: ":japanese_ogre:"
          SLACK_TITLE: Failure test
          SLACK_WEBHOOK: ${{ secrets.SLACK_WEBHOOK }}
  # build_windows:
  #   runs-on: windows-2019
  #   timeout-minutes: 10
  #   steps:
  #     - uses: actions/checkout@v3
  #     - uses: actions/setup-python@v4
  #       with:
  #         python-version: "3.11"
  #         cache: "pip"
  #     - run: pip install -v .
  # build_macos_arm64_job:
  #   runs-on: [self-hosted, macos, arm64]
  #   timeout-minutes: 10
  #   steps:
  #     - uses: actions/checkout@v3
  #     - name: Build
  #       run: |
  #         python3 -m venv .venv
  #         source .venv/bin/activate
  #         pip3 install -v .
